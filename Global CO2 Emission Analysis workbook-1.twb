<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20241.24.0308.0326                               -->
<workbook original-version='18.1' source-build='2024.1.1 (20241.24.0308.0326)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='top emissions' datatype='integer' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='30'>
        <calculation class='tableau' formula='30' />
      </column>
    </datasource>
    <datasource caption='Sheet1 (Co2 New)' inline='true' name='federated.08l0t5d04r106h18ogvob0suy29x' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Co2 New' name='excel-direct.1h8wwex06s6qx015nmo971c2l0t7'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/mural/Downloads/Co2 New.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.1h8wwex06s6qx015nmo971c2l0t7' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:T10001:no:A1:T10001:0' header='yes' outcome='6'>
            <column datatype='string' name='country' ordinal='0' />
            <column datatype='integer' name='year' ordinal='1' />
            <column datatype='real' name='co2' ordinal='2' />
            <column datatype='real' name='co2_growth_prct' ordinal='3' />
            <column datatype='real' name='co2_per_capita' ordinal='4' />
            <column datatype='real' name='cumulative_co2' ordinal='5' />
            <column datatype='real' name='coal_co2' ordinal='6' />
            <column datatype='real' name='cement_co2' ordinal='7' />
            <column datatype='real' name='flaring_co2' ordinal='8' />
            <column datatype='real' name='gas_co2' ordinal='9' />
            <column datatype='real' name='oil_co2' ordinal='10' />
            <column datatype='real' name='other_industry_co2' ordinal='11' />
            <column datatype='real' name='cement_co2_per_capita' ordinal='12' />
            <column datatype='real' name='coal_co2_per_capita' ordinal='13' />
            <column datatype='real' name='flaring_co2_per_capita' ordinal='14' />
            <column datatype='real' name='gas_co2_per_capita' ordinal='15' />
            <column datatype='real' name='oil_co2_per_capita' ordinal='16' />
            <column datatype='real' name='other_co2_per_capita' ordinal='17' />
            <column datatype='real' name='trade_co2_share' ordinal='18' />
            <column datatype='integer' name='population' ordinal='19' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.1h8wwex06s6qx015nmo971c2l0t7' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:T10001:no:A1:T10001:0' header='yes' outcome='6'>
            <column datatype='string' name='country' ordinal='0' />
            <column datatype='integer' name='year' ordinal='1' />
            <column datatype='real' name='co2' ordinal='2' />
            <column datatype='real' name='co2_growth_prct' ordinal='3' />
            <column datatype='real' name='co2_per_capita' ordinal='4' />
            <column datatype='real' name='cumulative_co2' ordinal='5' />
            <column datatype='real' name='coal_co2' ordinal='6' />
            <column datatype='real' name='cement_co2' ordinal='7' />
            <column datatype='real' name='flaring_co2' ordinal='8' />
            <column datatype='real' name='gas_co2' ordinal='9' />
            <column datatype='real' name='oil_co2' ordinal='10' />
            <column datatype='real' name='other_industry_co2' ordinal='11' />
            <column datatype='real' name='cement_co2_per_capita' ordinal='12' />
            <column datatype='real' name='coal_co2_per_capita' ordinal='13' />
            <column datatype='real' name='flaring_co2_per_capita' ordinal='14' />
            <column datatype='real' name='gas_co2_per_capita' ordinal='15' />
            <column datatype='real' name='oil_co2_per_capita' ordinal='16' />
            <column datatype='real' name='other_co2_per_capita' ordinal='17' />
            <column datatype='real' name='trade_co2_share' ordinal='18' />
            <column datatype='integer' name='population' ordinal='19' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:T10001:no:A1:T10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[country]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>country</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_FE685E0FC8B64FA58F0D84ABBF407AE9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[year]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>year</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_FE685E0FC8B64FA58F0D84ABBF407AE9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>co2</remote-name>
            <remote-type>5</remote-type>
            <local-name>[co2]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>co2</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_FE685E0FC8B64FA58F0D84ABBF407AE9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>co2_growth_prct</remote-name>
            <remote-type>5</remote-type>
            <local-name>[co2_growth_prct]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>co2_growth_prct</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_FE685E0FC8B64FA58F0D84ABBF407AE9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>co2_per_capita</remote-name>
            <remote-type>5</remote-type>
            <local-name>[co2_per_capita]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>co2_per_capita</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_FE685E0FC8B64FA58F0D84ABBF407AE9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cumulative_co2</remote-name>
            <remote-type>5</remote-type>
            <local-name>[cumulative_co2]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>cumulative_co2</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_FE685E0FC8B64FA58F0D84ABBF407AE9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>coal_co2</remote-name>
            <remote-type>5</remote-type>
            <local-name>[coal_co2]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>coal_co2</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_FE685E0FC8B64FA58F0D84ABBF407AE9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cement_co2</remote-name>
            <remote-type>5</remote-type>
            <local-name>[cement_co2]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>cement_co2</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_FE685E0FC8B64FA58F0D84ABBF407AE9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>flaring_co2</remote-name>
            <remote-type>5</remote-type>
            <local-name>[flaring_co2]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>flaring_co2</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_FE685E0FC8B64FA58F0D84ABBF407AE9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>gas_co2</remote-name>
            <remote-type>5</remote-type>
            <local-name>[gas_co2]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>gas_co2</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_FE685E0FC8B64FA58F0D84ABBF407AE9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>oil_co2</remote-name>
            <remote-type>5</remote-type>
            <local-name>[oil_co2]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>oil_co2</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_FE685E0FC8B64FA58F0D84ABBF407AE9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>other_industry_co2</remote-name>
            <remote-type>5</remote-type>
            <local-name>[other_industry_co2]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>other_industry_co2</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_FE685E0FC8B64FA58F0D84ABBF407AE9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cement_co2_per_capita</remote-name>
            <remote-type>5</remote-type>
            <local-name>[cement_co2_per_capita]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>cement_co2_per_capita</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_FE685E0FC8B64FA58F0D84ABBF407AE9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>coal_co2_per_capita</remote-name>
            <remote-type>5</remote-type>
            <local-name>[coal_co2_per_capita]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>coal_co2_per_capita</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_FE685E0FC8B64FA58F0D84ABBF407AE9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>flaring_co2_per_capita</remote-name>
            <remote-type>5</remote-type>
            <local-name>[flaring_co2_per_capita]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>flaring_co2_per_capita</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_FE685E0FC8B64FA58F0D84ABBF407AE9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>gas_co2_per_capita</remote-name>
            <remote-type>5</remote-type>
            <local-name>[gas_co2_per_capita]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>gas_co2_per_capita</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_FE685E0FC8B64FA58F0D84ABBF407AE9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>oil_co2_per_capita</remote-name>
            <remote-type>5</remote-type>
            <local-name>[oil_co2_per_capita]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>oil_co2_per_capita</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_FE685E0FC8B64FA58F0D84ABBF407AE9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>other_co2_per_capita</remote-name>
            <remote-type>5</remote-type>
            <local-name>[other_co2_per_capita]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>other_co2_per_capita</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_FE685E0FC8B64FA58F0D84ABBF407AE9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>trade_co2_share</remote-name>
            <remote-type>5</remote-type>
            <local-name>[trade_co2_share]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>trade_co2_share</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_FE685E0FC8B64FA58F0D84ABBF407AE9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[population]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>population</remote-alias>
            <ordinal>19</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_FE685E0FC8B64FA58F0D84ABBF407AE9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_FE685E0FC8B64FA58F0D84ABBF407AE9]' role='measure' type='quantitative' />
      <column caption='Cement Co2' datatype='real' name='[cement_co2]' role='measure' type='quantitative' />
      <column caption='Cement Co2 Per Capita' datatype='real' name='[cement_co2_per_capita]' role='measure' type='quantitative' />
      <column caption='Co2' datatype='real' name='[co2]' role='measure' type='quantitative' />
      <column caption='Co2 Growth Prct' datatype='real' name='[co2_growth_prct]' role='measure' type='quantitative' />
      <column caption='Co2 Per Capita' datatype='real' name='[co2_per_capita]' role='measure' type='quantitative' />
      <column caption='Coal Co2' datatype='real' name='[coal_co2]' role='measure' type='quantitative' />
      <column caption='Coal Co2 Per Capita' datatype='real' name='[coal_co2_per_capita]' role='measure' type='quantitative' />
      <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Cumulative Co2' datatype='real' name='[cumulative_co2]' role='measure' type='quantitative' />
      <column caption='Flaring Co2' datatype='real' name='[flaring_co2]' role='measure' type='quantitative' />
      <column caption='Flaring Co2 Per Capita' datatype='real' name='[flaring_co2_per_capita]' role='measure' type='quantitative' />
      <column caption='Gas Co2' datatype='real' name='[gas_co2]' role='measure' type='quantitative' />
      <column caption='Gas Co2 Per Capita' datatype='real' name='[gas_co2_per_capita]' role='measure' type='quantitative' />
      <column caption='Oil Co2' datatype='real' name='[oil_co2]' role='measure' type='quantitative' />
      <column caption='Oil Co2 Per Capita' datatype='real' name='[oil_co2_per_capita]' role='measure' type='quantitative' />
      <column caption='Other Co2 Per Capita' datatype='real' name='[other_co2_per_capita]' role='measure' type='quantitative' />
      <column caption='Other Industry Co2' datatype='real' name='[other_industry_co2]' role='measure' type='quantitative' />
      <column caption='Population' datatype='integer' name='[population]' role='measure' type='quantitative' />
      <column caption='Trade Co2 Share' datatype='real' name='[trade_co2_share]' role='measure' type='quantitative' />
      <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
      <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:country:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Bonaire Sint Eustatius and Saba&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Tuvalu&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Cape Verde&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;French Guiana&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Mayotte&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Niue&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Timor&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;World&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;British Virgin Islands&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Nauru&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Panama Canal Zone&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cook Islands&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Macao&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Palau&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Saint Pierre and Miquelon&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Christmas Island&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ryukyu Islands&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;French Polynesia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Reunion&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Anguilla&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Saint Helena&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Asia (excl. China &amp; India)&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Europe (excl. EU-27)&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Curacao&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Europe (excl. EU-28)&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kiribati&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Democratic Republic of Congo&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Kuwaiti Oil Fires&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Martinique&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;French Equatorial Africa&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Puerto Rico&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Sint Maarten (Dutch part)&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Wallis and Futuna&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;EU-27&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Palestine&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;St. Kitts-Nevis-Anguilla&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Antarctica&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Montserrat&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Turks and Caicos Islands&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;French West Africa&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Leeward Islands&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Micronesia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;North America (excl. USA)&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Faeroe Islands&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;New Caledonia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;EU-28&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Guadeloupe&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;International transport&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Micronesia (country)&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;North Korea&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_FE685E0FC8B64FA58F0D84ABBF407AE9'>
            <properties context=''>
              <relation connection='excel-direct.1h8wwex06s6qx015nmo971c2l0t7' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:T10001:no:A1:T10001:0' header='yes' outcome='6'>
                  <column datatype='string' name='country' ordinal='0' />
                  <column datatype='integer' name='year' ordinal='1' />
                  <column datatype='real' name='co2' ordinal='2' />
                  <column datatype='real' name='co2_growth_prct' ordinal='3' />
                  <column datatype='real' name='co2_per_capita' ordinal='4' />
                  <column datatype='real' name='cumulative_co2' ordinal='5' />
                  <column datatype='real' name='coal_co2' ordinal='6' />
                  <column datatype='real' name='cement_co2' ordinal='7' />
                  <column datatype='real' name='flaring_co2' ordinal='8' />
                  <column datatype='real' name='gas_co2' ordinal='9' />
                  <column datatype='real' name='oil_co2' ordinal='10' />
                  <column datatype='real' name='other_industry_co2' ordinal='11' />
                  <column datatype='real' name='cement_co2_per_capita' ordinal='12' />
                  <column datatype='real' name='coal_co2_per_capita' ordinal='13' />
                  <column datatype='real' name='flaring_co2_per_capita' ordinal='14' />
                  <column datatype='real' name='gas_co2_per_capita' ordinal='15' />
                  <column datatype='real' name='oil_co2_per_capita' ordinal='16' />
                  <column datatype='real' name='other_co2_per_capita' ordinal='17' />
                  <column datatype='real' name='trade_co2_share' ordinal='18' />
                  <column datatype='integer' name='population' ordinal='19' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Co2 emission per captia'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>                                                                                           Co2 emission per captia</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Co2 New)' name='federated.08l0t5d04r106h18ogvob0suy29x' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.08l0t5d04r106h18ogvob0suy29x'>
            <column caption='Co2 Per Capita' datatype='real' name='[co2_per_capita]' role='measure' type='quantitative' />
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[co2_per_capita]' derivation='Sum' name='[sum:co2_per_capita:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.08l0t5d04r106h18ogvob0suy29x].[none:country:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.08l0t5d04r106h18ogvob0suy29x].[sum:co2_per_capita:qk]' shelf='columns' />
          </shelf-sorts>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='cell-w' value='48' />
            <format attr='cell-h' value='16' />
            <format attr='cell' value='16' />
            <format attr='cell-q' value='80' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.08l0t5d04r106h18ogvob0suy29x].[none:country:nk]' />
              <text column='[federated.08l0t5d04r106h18ogvob0suy29x].[none:country:nk]' />
              <text column='[federated.08l0t5d04r106h18ogvob0suy29x].[sum:co2_per_capita:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.60000002384185791' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.08l0t5d04r106h18ogvob0suy29x].[sum:co2_per_capita:qk]</rows>
        <cols>[federated.08l0t5d04r106h18ogvob0suy29x].[none:country:nk]</cols>
      </table>
      <simple-id uuid='{C4F6975D-4054-43BF-A551-76A51CB82CA5}' />
    </worksheet>
    <worksheet name='Co2 emissions India vs USA'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>                                                                                               Co2 emissions India vs USA</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Co2 New)' name='federated.08l0t5d04r106h18ogvob0suy29x' />
          </datasources>
          <datasource-dependencies datasource='federated.08l0t5d04r106h18ogvob0suy29x'>
            <column caption='Co2' datatype='real' name='[co2]' role='measure' type='quantitative' />
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[co2]' derivation='Sum' name='[sum:co2:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.08l0t5d04r106h18ogvob0suy29x].[none:country:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:country:nk]' member='&quot;India&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.08l0t5d04r106h18ogvob0suy29x].[none:country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.08l0t5d04r106h18ogvob0suy29x].[none:country:nk]' />
              <text column='[federated.08l0t5d04r106h18ogvob0suy29x].[sum:co2:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.08l0t5d04r106h18ogvob0suy29x].[sum:co2:qk]</rows>
        <cols>([federated.08l0t5d04r106h18ogvob0suy29x].[none:country:nk] * [federated.08l0t5d04r106h18ogvob0suy29x].[none:year:qk])</cols>
      </table>
      <simple-id uuid='{F5DC63BF-4CFF-41CD-A76D-AFB8436A0232}' />
    </worksheet>
    <worksheet name='Top 15 co2 emitting countries'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>                                                                                                   Top 15 co2 emitting countries</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Co2 New)' name='federated.08l0t5d04r106h18ogvob0suy29x' />
          </datasources>
          <datasource-dependencies datasource='federated.08l0t5d04r106h18ogvob0suy29x'>
            <column caption='Co2' datatype='real' name='[co2]' role='measure' type='quantitative' />
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[co2]' derivation='Sum' name='[sum:co2:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.08l0t5d04r106h18ogvob0suy29x].[none:country:nk]'>
            <groupfilter count='15' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([co2])' function='order' user:ui-marker='order'>
                <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                  <groupfilter function='level-members' level='[none:country:nk]' />
                  <groupfilter function='union'>
                    <groupfilter function='member' level='[none:country:nk]' member='&quot;Africa&quot;' />
                    <groupfilter function='member' level='[none:country:nk]' member='&quot;Antarctica&quot;' />
                    <groupfilter function='member' level='[none:country:nk]' member='&quot;Asia&quot;' />
                    <groupfilter function='member' level='[none:country:nk]' member='&quot;Asia (excl. China &amp; India)&quot;' />
                    <groupfilter function='member' level='[none:country:nk]' member='&quot;EU-27&quot;' />
                    <groupfilter function='member' level='[none:country:nk]' member='&quot;EU-28&quot;' />
                    <groupfilter function='member' level='[none:country:nk]' member='&quot;Europe&quot;' />
                    <groupfilter function='member' level='[none:country:nk]' member='&quot;Europe (excl. EU-27)&quot;' />
                    <groupfilter function='member' level='[none:country:nk]' member='&quot;Europe (excl. EU-28)&quot;' />
                    <groupfilter function='member' level='[none:country:nk]' member='&quot;North America&quot;' />
                    <groupfilter function='member' level='[none:country:nk]' member='&quot;North America (excl. USA)&quot;' />
                    <groupfilter function='member' level='[none:country:nk]' member='&quot;South America&quot;' />
                    <groupfilter function='member' level='[none:country:nk]' member='&quot;World&quot;' />
                    <groupfilter function='member' level='[none:country:nk]' member='%null%' />
                  </groupfilter>
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.08l0t5d04r106h18ogvob0suy29x].[none:country:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.08l0t5d04r106h18ogvob0suy29x].[sum:co2:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.08l0t5d04r106h18ogvob0suy29x].[none:country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.08l0t5d04r106h18ogvob0suy29x].[none:country:nk]' />
              <lod column='[federated.08l0t5d04r106h18ogvob0suy29x].[none:country:nk]' />
              <text column='[federated.08l0t5d04r106h18ogvob0suy29x].[sum:co2:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.08l0t5d04r106h18ogvob0suy29x].[sum:co2:qk]</rows>
        <cols>[federated.08l0t5d04r106h18ogvob0suy29x].[none:country:nk]</cols>
      </table>
      <simple-id uuid='{BF547432-F178-47DC-B205-07BE49671B6B}' />
    </worksheet>
    <worksheet name='Total emissions by continents'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>                                                                                        Total emissions by continents</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Co2 New)' name='federated.08l0t5d04r106h18ogvob0suy29x' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.08l0t5d04r106h18ogvob0suy29x'>
            <column caption='Co2' datatype='real' name='[co2]' role='measure' type='quantitative' />
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[co2]' derivation='Sum' name='[sum:co2:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.08l0t5d04r106h18ogvob0suy29x].[none:country:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Africa&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Asia&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Australia&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Europe&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;North America&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;South America&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.08l0t5d04r106h18ogvob0suy29x].[none:country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='cell-w' value='1040' />
            <format attr='cell-h' value='1040' />
            <format attr='cell' value='130' />
            <format attr='cell-q' value='650' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[federated.08l0t5d04r106h18ogvob0suy29x].[none:country:nk]' />
              <wedge-size column='[federated.08l0t5d04r106h18ogvob0suy29x].[sum:co2:qk]' />
              <text column='[federated.08l0t5d04r106h18ogvob0suy29x].[sum:co2:qk]' />
              <text column='[federated.08l0t5d04r106h18ogvob0suy29x].[none:country:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{2EE5A1AA-F094-47C5-89FF-8EAC96C3FD8C}' />
    </worksheet>
    <worksheet name='Total world emissions'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Co2 New)' name='federated.08l0t5d04r106h18ogvob0suy29x' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.08l0t5d04r106h18ogvob0suy29x'>
            <column caption='Co2' datatype='real' name='[co2]' role='measure' type='quantitative' />
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[co2]' derivation='Sum' name='[sum:co2:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.08l0t5d04r106h18ogvob0suy29x].[none:country:nk]'>
            <groupfilter function='level-members' level='[none:country:nk]' />
          </filter>
          <slices>
            <column>[federated.08l0t5d04r106h18ogvob0suy29x].[none:country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.08l0t5d04r106h18ogvob0suy29x].[Longitude (generated)]' field-type='quantitative' max='21638431.333963491' min='-14412330.485220606' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.08l0t5d04r106h18ogvob0suy29x].[Latitude (generated)]' field-type='quantitative' max='4362050.6887110807' min='-19974410.035291612' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='cell-w' value='126' />
            <format attr='cell-h' value='42' />
            <format attr='cell' value='42' />
            <format attr='cell-q' value='210' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.08l0t5d04r106h18ogvob0suy29x].[none:country:nk]' />
              <size column='[federated.08l0t5d04r106h18ogvob0suy29x].[sum:co2:qk]' />
              <text column='[federated.08l0t5d04r106h18ogvob0suy29x].[none:country:nk]' />
              <text column='[federated.08l0t5d04r106h18ogvob0suy29x].[sum:co2:qk]' />
              <geometry column='[federated.08l0t5d04r106h18ogvob0suy29x].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.08l0t5d04r106h18ogvob0suy29x].[Latitude (generated)]</rows>
        <cols>[federated.08l0t5d04r106h18ogvob0suy29x].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{A8081102-FDBD-4B81-A503-EE65B922F582}' />
    </worksheet>
    <worksheet name='co2 emission over time'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>                                                                                    co2 emission over time</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Co2 New)' name='federated.08l0t5d04r106h18ogvob0suy29x' />
          </datasources>
          <datasource-dependencies datasource='federated.08l0t5d04r106h18ogvob0suy29x'>
            <column caption='Co2' datatype='real' name='[co2]' role='measure' type='quantitative' />
            <column-instance column='[year]' derivation='None' name='[none:year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[co2]' derivation='Sum' name='[sum:co2:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.08l0t5d04r106h18ogvob0suy29x].[sum:co2:qk]' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-sequential'>
                <color>#f1f1f1</color>
                <color>#e2e2f2</color>
                <color>#d3d3f3</color>
                <color>#c4c4f5</color>
                <color>#b4b4f6</color>
                <color>#a5a5f8</color>
                <color>#9595f9</color>
                <color>#8585fa</color>
                <color>#7575fc</color>
                <color>#6565fd</color>
                <color>#5555ff</color>
              </color-palette>
            </encoding>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.08l0t5d04r106h18ogvob0suy29x].[sum:co2:qk]' />
              <text column='[federated.08l0t5d04r106h18ogvob0suy29x].[sum:co2:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.08l0t5d04r106h18ogvob0suy29x].[sum:co2:qk]</rows>
        <cols>[federated.08l0t5d04r106h18ogvob0suy29x].[none:year:qk]</cols>
      </table>
      <simple-id uuid='{694BA69B-B631-49CC-B449-94C6C3EFE945}' />
    </worksheet>
  </worksheets>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' name='Total world emissions'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.08l0t5d04r106h18ogvob0suy29x].[none:country:nk]' type='filter' />
            <card param='[federated.08l0t5d04r106h18ogvob0suy29x].[none:country:nk]' type='highlighter' />
            <card pane-specification-id='0' param='[federated.08l0t5d04r106h18ogvob0suy29x].[none:country:nk]' type='color' />
            <card pane-specification-id='0' param='[federated.08l0t5d04r106h18ogvob0suy29x].[sum:co2:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.08l0t5d04r106h18ogvob0suy29x].[none:country:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{78B27867-B55A-436A-9CB3-4C9FD5A17F1B}' />
    </window>
    <window class='worksheet' name='co2 emission over time'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='60'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.08l0t5d04r106h18ogvob0suy29x].[sum:co2:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.08l0t5d04r106h18ogvob0suy29x].[none:year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{23B9494B-3F44-4D44-B2C7-A6BAA0DA2F77}' />
    </window>
    <window class='worksheet' maximized='true' name='Top 15 co2 emitting countries'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.08l0t5d04r106h18ogvob0suy29x].[none:country:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.08l0t5d04r106h18ogvob0suy29x].[none:country:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E32AB963-F044-4CEA-BDEA-3DC301C4AA45}' />
    </window>
    <window class='worksheet' name='Co2 emissions India vs USA'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.08l0t5d04r106h18ogvob0suy29x].[none:country:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.08l0t5d04r106h18ogvob0suy29x].[none:country:nk]</field>
            <field>[federated.08l0t5d04r106h18ogvob0suy29x].[none:year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{57C00E08-01BB-42C9-AB1E-62D7637A64A7}' />
    </window>
    <window class='worksheet' name='Total emissions by continents'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.08l0t5d04r106h18ogvob0suy29x].[none:country:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.08l0t5d04r106h18ogvob0suy29x].[none:country:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D546E16F-36C3-49FF-A876-5977E1C65F17}' />
    </window>
    <window class='worksheet' name='Co2 emission per captia'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.08l0t5d04r106h18ogvob0suy29x].[none:country:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.08l0t5d04r106h18ogvob0suy29x].[none:country:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{1A8D96B9-10A3-46C5-B33F-70E7A84FA916}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Co2 emission per captia' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Co2 emissions India vs USA' width='192'>
      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
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Top 15 co2 emitting countries' width='192'>
      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
      jq8mHLLxAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Total emissions by continents' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Total world emissions' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='co2 emission over time' width='192'>
      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
      RU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
