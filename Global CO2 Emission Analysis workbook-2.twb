<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20241.24.0308.0326                               -->
<workbook original-version='18.1' source-build='2024.1.1 (20241.24.0308.0326)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='top' datatype='integer' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='10'>
        <calculation class='tableau' formula='10' />
      </column>
    </datasource>
    <datasource caption='Sheet1 (Co2 New)' inline='true' name='federated.0to20yi107f7hs1fw6kit010hryj' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Co2 New' name='excel-direct.1scon470ygepap19rdjke0uxpoan'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/mural/Downloads/Co2 New.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.1scon470ygepap19rdjke0uxpoan' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:T10001:no:A1:T10001:0' header='yes' outcome='6'>
            <column datatype='string' name='country' ordinal='0' />
            <column datatype='integer' name='year' ordinal='1' />
            <column datatype='real' name='co2' ordinal='2' />
            <column datatype='real' name='co2_growth_prct' ordinal='3' />
            <column datatype='real' name='co2_per_capita' ordinal='4' />
            <column datatype='real' name='cumulative_co2' ordinal='5' />
            <column datatype='real' name='coal_co2' ordinal='6' />
            <column datatype='real' name='cement_co2' ordinal='7' />
            <column datatype='real' name='flaring_co2' ordinal='8' />
            <column datatype='real' name='gas_co2' ordinal='9' />
            <column datatype='real' name='oil_co2' ordinal='10' />
            <column datatype='real' name='other_industry_co2' ordinal='11' />
            <column datatype='real' name='cement_co2_per_capita' ordinal='12' />
            <column datatype='real' name='coal_co2_per_capita' ordinal='13' />
            <column datatype='real' name='flaring_co2_per_capita' ordinal='14' />
            <column datatype='real' name='gas_co2_per_capita' ordinal='15' />
            <column datatype='real' name='oil_co2_per_capita' ordinal='16' />
            <column datatype='real' name='other_co2_per_capita' ordinal='17' />
            <column datatype='real' name='trade_co2_share' ordinal='18' />
            <column datatype='integer' name='population' ordinal='19' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.1scon470ygepap19rdjke0uxpoan' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:T10001:no:A1:T10001:0' header='yes' outcome='6'>
            <column datatype='string' name='country' ordinal='0' />
            <column datatype='integer' name='year' ordinal='1' />
            <column datatype='real' name='co2' ordinal='2' />
            <column datatype='real' name='co2_growth_prct' ordinal='3' />
            <column datatype='real' name='co2_per_capita' ordinal='4' />
            <column datatype='real' name='cumulative_co2' ordinal='5' />
            <column datatype='real' name='coal_co2' ordinal='6' />
            <column datatype='real' name='cement_co2' ordinal='7' />
            <column datatype='real' name='flaring_co2' ordinal='8' />
            <column datatype='real' name='gas_co2' ordinal='9' />
            <column datatype='real' name='oil_co2' ordinal='10' />
            <column datatype='real' name='other_industry_co2' ordinal='11' />
            <column datatype='real' name='cement_co2_per_capita' ordinal='12' />
            <column datatype='real' name='coal_co2_per_capita' ordinal='13' />
            <column datatype='real' name='flaring_co2_per_capita' ordinal='14' />
            <column datatype='real' name='gas_co2_per_capita' ordinal='15' />
            <column datatype='real' name='oil_co2_per_capita' ordinal='16' />
            <column datatype='real' name='other_co2_per_capita' ordinal='17' />
            <column datatype='real' name='trade_co2_share' ordinal='18' />
            <column datatype='integer' name='population' ordinal='19' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:T10001:no:A1:T10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[country]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>country</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_1F1F8C1F32D1427688E1C5746E6E5FA6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[year]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>year</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_1F1F8C1F32D1427688E1C5746E6E5FA6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>co2</remote-name>
            <remote-type>5</remote-type>
            <local-name>[co2]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>co2</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_1F1F8C1F32D1427688E1C5746E6E5FA6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>co2_growth_prct</remote-name>
            <remote-type>5</remote-type>
            <local-name>[co2_growth_prct]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>co2_growth_prct</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_1F1F8C1F32D1427688E1C5746E6E5FA6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>co2_per_capita</remote-name>
            <remote-type>5</remote-type>
            <local-name>[co2_per_capita]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>co2_per_capita</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_1F1F8C1F32D1427688E1C5746E6E5FA6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cumulative_co2</remote-name>
            <remote-type>5</remote-type>
            <local-name>[cumulative_co2]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>cumulative_co2</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_1F1F8C1F32D1427688E1C5746E6E5FA6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>coal_co2</remote-name>
            <remote-type>5</remote-type>
            <local-name>[coal_co2]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>coal_co2</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_1F1F8C1F32D1427688E1C5746E6E5FA6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cement_co2</remote-name>
            <remote-type>5</remote-type>
            <local-name>[cement_co2]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>cement_co2</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_1F1F8C1F32D1427688E1C5746E6E5FA6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>flaring_co2</remote-name>
            <remote-type>5</remote-type>
            <local-name>[flaring_co2]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>flaring_co2</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_1F1F8C1F32D1427688E1C5746E6E5FA6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>gas_co2</remote-name>
            <remote-type>5</remote-type>
            <local-name>[gas_co2]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>gas_co2</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_1F1F8C1F32D1427688E1C5746E6E5FA6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>oil_co2</remote-name>
            <remote-type>5</remote-type>
            <local-name>[oil_co2]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>oil_co2</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_1F1F8C1F32D1427688E1C5746E6E5FA6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>other_industry_co2</remote-name>
            <remote-type>5</remote-type>
            <local-name>[other_industry_co2]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>other_industry_co2</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_1F1F8C1F32D1427688E1C5746E6E5FA6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cement_co2_per_capita</remote-name>
            <remote-type>5</remote-type>
            <local-name>[cement_co2_per_capita]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>cement_co2_per_capita</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_1F1F8C1F32D1427688E1C5746E6E5FA6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>coal_co2_per_capita</remote-name>
            <remote-type>5</remote-type>
            <local-name>[coal_co2_per_capita]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>coal_co2_per_capita</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_1F1F8C1F32D1427688E1C5746E6E5FA6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>flaring_co2_per_capita</remote-name>
            <remote-type>5</remote-type>
            <local-name>[flaring_co2_per_capita]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>flaring_co2_per_capita</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_1F1F8C1F32D1427688E1C5746E6E5FA6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>gas_co2_per_capita</remote-name>
            <remote-type>5</remote-type>
            <local-name>[gas_co2_per_capita]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>gas_co2_per_capita</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_1F1F8C1F32D1427688E1C5746E6E5FA6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>oil_co2_per_capita</remote-name>
            <remote-type>5</remote-type>
            <local-name>[oil_co2_per_capita]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>oil_co2_per_capita</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_1F1F8C1F32D1427688E1C5746E6E5FA6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>other_co2_per_capita</remote-name>
            <remote-type>5</remote-type>
            <local-name>[other_co2_per_capita]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>other_co2_per_capita</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_1F1F8C1F32D1427688E1C5746E6E5FA6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>trade_co2_share</remote-name>
            <remote-type>5</remote-type>
            <local-name>[trade_co2_share]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>trade_co2_share</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_1F1F8C1F32D1427688E1C5746E6E5FA6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[population]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>population</remote-alias>
            <ordinal>19</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_1F1F8C1F32D1427688E1C5746E6E5FA6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='avg' datatype='integer' name='[Calculation_1068197548175331328]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='MIN(1)' />
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_1F1F8C1F32D1427688E1C5746E6E5FA6]' role='measure' type='quantitative' />
      <column caption='Cement Co2' datatype='real' name='[cement_co2]' role='measure' type='quantitative' />
      <column caption='Cement Co2 Per Capita' datatype='real' name='[cement_co2_per_capita]' role='measure' type='quantitative' />
      <column caption='Co2' datatype='real' name='[co2]' role='measure' type='quantitative' />
      <column caption='Co2 Growth Prct' datatype='real' name='[co2_growth_prct]' role='measure' type='quantitative' />
      <column caption='Co2 Per Capita' datatype='real' name='[co2_per_capita]' role='measure' type='quantitative' />
      <column caption='Coal Co2' datatype='real' name='[coal_co2]' role='measure' type='quantitative' />
      <column caption='Coal Co2 Per Capita' datatype='real' name='[coal_co2_per_capita]' role='measure' type='quantitative' />
      <column aggregation='CountD' caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Cumulative Co2' datatype='real' name='[cumulative_co2]' role='measure' type='quantitative' />
      <column caption='Flaring Co2' datatype='real' name='[flaring_co2]' role='measure' type='quantitative' />
      <column caption='Flaring Co2 Per Capita' datatype='real' name='[flaring_co2_per_capita]' role='measure' type='quantitative' />
      <column caption='Gas Co2' datatype='real' name='[gas_co2]' role='measure' type='quantitative' />
      <column caption='Gas Co2 Per Capita' datatype='real' name='[gas_co2_per_capita]' role='measure' type='quantitative' />
      <column caption='Oil Co2' datatype='real' name='[oil_co2]' role='measure' type='quantitative' />
      <column caption='Oil Co2 Per Capita' datatype='real' name='[oil_co2_per_capita]' role='measure' type='quantitative' />
      <column caption='Other Co2 Per Capita' datatype='real' name='[other_co2_per_capita]' role='measure' type='quantitative' />
      <column caption='Other Industry Co2' datatype='real' name='[other_industry_co2]' role='measure' type='quantitative' />
      <column caption='Population' datatype='integer' name='[population]' role='measure' type='quantitative' />
      <column caption='Trade Co2 Share' datatype='real' name='[trade_co2_share]' role='measure' type='quantitative' />
      <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
      <column-instance column='[__tableau_internal_object_id__].[Sheet1_1F1F8C1F32D1427688E1C5746E6E5FA6]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:Sheet1_1F1F8C1F32D1427688E1C5746E6E5FA6:qk]' pivot='key' type='quantitative' />
      <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
      <column-instance column='[cement_co2]' derivation='Sum' name='[sum:cement_co2:qk]' pivot='key' type='quantitative' />
      <column-instance column='[cement_co2_per_capita]' derivation='Sum' name='[sum:cement_co2_per_capita:qk]' pivot='key' type='quantitative' />
      <column-instance column='[co2]' derivation='Sum' name='[sum:co2:qk]' pivot='key' type='quantitative' />
      <column-instance column='[co2_growth_prct]' derivation='Sum' name='[sum:co2_growth_prct:qk]' pivot='key' type='quantitative' />
      <column-instance column='[co2_per_capita]' derivation='Sum' name='[sum:co2_per_capita:qk]' pivot='key' type='quantitative' />
      <column-instance column='[coal_co2]' derivation='Sum' name='[sum:coal_co2:qk]' pivot='key' type='quantitative' />
      <column-instance column='[coal_co2_per_capita]' derivation='Sum' name='[sum:coal_co2_per_capita:qk]' pivot='key' type='quantitative' />
      <column-instance column='[cumulative_co2]' derivation='Sum' name='[sum:cumulative_co2:qk]' pivot='key' type='quantitative' />
      <column-instance column='[flaring_co2]' derivation='Sum' name='[sum:flaring_co2:qk]' pivot='key' type='quantitative' />
      <column-instance column='[flaring_co2_per_capita]' derivation='Sum' name='[sum:flaring_co2_per_capita:qk]' pivot='key' type='quantitative' />
      <column-instance column='[gas_co2]' derivation='Sum' name='[sum:gas_co2:qk]' pivot='key' type='quantitative' />
      <column-instance column='[gas_co2_per_capita]' derivation='Sum' name='[sum:gas_co2_per_capita:qk]' pivot='key' type='quantitative' />
      <column-instance column='[oil_co2]' derivation='Sum' name='[sum:oil_co2:qk]' pivot='key' type='quantitative' />
      <column-instance column='[oil_co2_per_capita]' derivation='Sum' name='[sum:oil_co2_per_capita:qk]' pivot='key' type='quantitative' />
      <column-instance column='[other_co2_per_capita]' derivation='Sum' name='[sum:other_co2_per_capita:qk]' pivot='key' type='quantitative' />
      <column-instance column='[other_industry_co2]' derivation='Sum' name='[sum:other_industry_co2:qk]' pivot='key' type='quantitative' />
      <column-instance column='[population]' derivation='Sum' name='[sum:population:qk]' pivot='key' type='quantitative' />
      <column-instance column='[trade_co2_share]' derivation='Sum' name='[sum:trade_co2_share:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1068197548175331328]' derivation='User' name='[usr:Calculation_1068197548175331328:qk]' pivot='key' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:country:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Anguilla&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Bonaire Sint Eustatius and Saba&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Tuvalu&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Cape Verde&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;French Guiana&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;International transport&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Mayotte&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Niue&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Timor&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;World&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;British Virgin Islands&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Nauru&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Panama Canal Zone&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cook Islands&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Macao&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Palau&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Saint Pierre and Miquelon&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Christmas Island&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ryukyu Islands&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Turks and Caicos Islands&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;French Polynesia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;North Korea&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Reunion&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Antarctica&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Saint Helena&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Asia (excl. China &amp; India)&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Europe (excl. EU-27)&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Curacao&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Europe (excl. EU-28)&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kiribati&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Democratic Republic of Congo&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Leeward Islands&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Martinique&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;French Equatorial Africa&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Puerto Rico&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Sint Maarten (Dutch part)&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Wallis and Futuna&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;EU-27&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Palestine&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;St. Kitts-Nevis-Anguilla&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Montserrat&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;French West Africa&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Kuwaiti Oil Fires&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Micronesia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;North America (excl. USA)&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Faeroe Islands&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;New Caledonia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;EU-28&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Guadeloupe&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Micronesia (country)&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;[federated.0to20yi107f7hs1fw6kit010hryj].[sum:cumulative_co2:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0to20yi107f7hs1fw6kit010hryj].[sum:cement_co2:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0to20yi107f7hs1fw6kit010hryj].[sum:co2_per_capita:qk]&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;[federated.0to20yi107f7hs1fw6kit010hryj].[sum:gas_co2_per_capita:qk]&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;[federated.0to20yi107f7hs1fw6kit010hryj].[sum:flaring_co2:qk]&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;[federated.0to20yi107f7hs1fw6kit010hryj].[sum:coal_co2:qk]&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;[federated.0to20yi107f7hs1fw6kit010hryj].[sum:trade_co2_share:qk]&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;[federated.0to20yi107f7hs1fw6kit010hryj].[sum:cement_co2_per_capita:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.0to20yi107f7hs1fw6kit010hryj].[sum:other_industry_co2:qk]&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;[federated.0to20yi107f7hs1fw6kit010hryj].[sum:coal_co2_per_capita:qk]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[federated.0to20yi107f7hs1fw6kit010hryj].[sum:oil_co2:qk]&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;[federated.0to20yi107f7hs1fw6kit010hryj].[sum:oil_co2_per_capita:qk]&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;[federated.0to20yi107f7hs1fw6kit010hryj].[sum:population:qk]&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;[federated.0to20yi107f7hs1fw6kit010hryj].[usr:Calculation_1068197548175331328:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0to20yi107f7hs1fw6kit010hryj].[sum:flaring_co2_per_capita:qk]&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;[federated.0to20yi107f7hs1fw6kit010hryj].[__tableau_internal_object_id__].[cnt:Sheet1_1F1F8C1F32D1427688E1C5746E6E5FA6:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0to20yi107f7hs1fw6kit010hryj].[sum:co2:qk]&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;[federated.0to20yi107f7hs1fw6kit010hryj].[sum:other_co2_per_capita:qk]&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;[federated.0to20yi107f7hs1fw6kit010hryj].[sum:gas_co2:qk]&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;[federated.0to20yi107f7hs1fw6kit010hryj].[sum:co2_growth_prct:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_1F1F8C1F32D1427688E1C5746E6E5FA6'>
            <properties context=''>
              <relation connection='excel-direct.1scon470ygepap19rdjke0uxpoan' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:T10001:no:A1:T10001:0' header='yes' outcome='6'>
                  <column datatype='string' name='country' ordinal='0' />
                  <column datatype='integer' name='year' ordinal='1' />
                  <column datatype='real' name='co2' ordinal='2' />
                  <column datatype='real' name='co2_growth_prct' ordinal='3' />
                  <column datatype='real' name='co2_per_capita' ordinal='4' />
                  <column datatype='real' name='cumulative_co2' ordinal='5' />
                  <column datatype='real' name='coal_co2' ordinal='6' />
                  <column datatype='real' name='cement_co2' ordinal='7' />
                  <column datatype='real' name='flaring_co2' ordinal='8' />
                  <column datatype='real' name='gas_co2' ordinal='9' />
                  <column datatype='real' name='oil_co2' ordinal='10' />
                  <column datatype='real' name='other_industry_co2' ordinal='11' />
                  <column datatype='real' name='cement_co2_per_capita' ordinal='12' />
                  <column datatype='real' name='coal_co2_per_capita' ordinal='13' />
                  <column datatype='real' name='flaring_co2_per_capita' ordinal='14' />
                  <column datatype='real' name='gas_co2_per_capita' ordinal='15' />
                  <column datatype='real' name='oil_co2_per_capita' ordinal='16' />
                  <column datatype='real' name='other_co2_per_capita' ordinal='17' />
                  <column datatype='real' name='trade_co2_share' ordinal='18' />
                  <column datatype='integer' name='population' ordinal='19' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='  Donut chart for  coal co2 emission'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>                                                                               Donut chart for coal co2 emission</run>
            <run>Æ&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Co2 New)' name='federated.0to20yi107f7hs1fw6kit010hryj' />
          </datasources>
          <datasource-dependencies datasource='federated.0to20yi107f7hs1fw6kit010hryj'>
            <column caption='AVG(0.0)' datatype='real' name='[Calculation_1068197548179443716]' role='measure' type='quantitative' user:unnamed='Sheet 5'>
              <calculation class='tableau' formula='AVG(0.0)' />
            </column>
            <column caption='AVG(0.0)' datatype='real' name='[Calculation_1068197548179587078]' role='measure' type='quantitative' user:unnamed='Sheet 5'>
              <calculation class='tableau' formula='AVG(0.0)' />
            </column>
            <column caption='Coal Co2' datatype='real' name='[coal_co2]' role='measure' type='quantitative' />
            <column aggregation='CountD' caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[coal_co2]' derivation='CountD' name='[ctd:coal_co2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[coal_co2]' derivation='Sum' name='[sum:coal_co2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1068197548179443716]' derivation='User' name='[usr:Calculation_1068197548179443716:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1068197548179587078]' derivation='User' name='[usr:Calculation_1068197548179587078:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0to20yi107f7hs1fw6kit010hryj].[none:country:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Africa&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Antarctica&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Asia&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Australia&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Europe&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;North America&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;South America&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0to20yi107f7hs1fw6kit010hryj].[none:country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0to20yi107f7hs1fw6kit010hryj].[usr:Calculation_1068197548179587078:qk]' field-type='quantitative' fold='true' scope='cols' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='cell-w' value='464' />
            <format attr='cell-h' value='464' />
            <format attr='cell' value='58' />
            <format attr='cell-q' value='290' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0to20yi107f7hs1fw6kit010hryj].[usr:Calculation_1068197548179443716:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0to20yi107f7hs1fw6kit010hryj].[none:country:nk]' />
              <wedge-size column='[federated.0to20yi107f7hs1fw6kit010hryj].[sum:coal_co2:qk]' />
              <size column='[federated.0to20yi107f7hs1fw6kit010hryj].[sum:coal_co2:qk]' />
              <text column='[federated.0to20yi107f7hs1fw6kit010hryj].[none:country:nk]' />
              <text column='[federated.0to20yi107f7hs1fw6kit010hryj].[ctd:coal_co2:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='2' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0to20yi107f7hs1fw6kit010hryj].[usr:Calculation_1068197548179587078:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <text column='[federated.0to20yi107f7hs1fw6kit010hryj].[sum:coal_co2:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#ffffff' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>([federated.0to20yi107f7hs1fw6kit010hryj].[usr:Calculation_1068197548179443716:qk] + [federated.0to20yi107f7hs1fw6kit010hryj].[usr:Calculation_1068197548179587078:qk])</cols>
      </table>
      <simple-id uuid='{515677B4-9568-4CC3-8AE3-1D17AEFD35AF}' />
    </worksheet>
    <worksheet name='CO2 emission in 2020'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>CO2 emission in 2020</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Co2 New)' name='federated.0to20yi107f7hs1fw6kit010hryj' />
          </datasources>
          <datasource-dependencies datasource='federated.0to20yi107f7hs1fw6kit010hryj'>
            <column caption='Co2' datatype='real' name='[co2]' role='measure' type='quantitative' />
            <column aggregation='CountD' caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[co2]' derivation='Sum' name='[sum:co2:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0to20yi107f7hs1fw6kit010hryj].[none:country:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:country:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Africa&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Antarctica&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Asia&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Asia (excl. China &amp; India)&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Australia&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;EU-27&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;EU-28&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Europe&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Europe (excl. EU-27)&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Europe (excl. EU-28)&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Micronesia&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;North America&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;North America (excl. USA)&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;South America&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;World&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='%null%' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.0to20yi107f7hs1fw6kit010hryj].[none:year:qk]' included-values='in-range'>
            <min>2020</min>
            <max>2020</max>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0to20yi107f7hs1fw6kit010hryj].[none:country:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0to20yi107f7hs1fw6kit010hryj].[sum:co2:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.0to20yi107f7hs1fw6kit010hryj].[none:year:qk]</column>
            <column>[federated.0to20yi107f7hs1fw6kit010hryj].[none:country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0to20yi107f7hs1fw6kit010hryj].[none:country:nk]' />
              <text column='[federated.0to20yi107f7hs1fw6kit010hryj].[sum:co2:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0to20yi107f7hs1fw6kit010hryj].[none:country:nk]</rows>
        <cols>[federated.0to20yi107f7hs1fw6kit010hryj].[sum:co2:qk]</cols>
      </table>
      <simple-id uuid='{7685DA7B-1A43-4160-BE4F-FBF6365A9C8C}' />
    </worksheet>
    <worksheet name='CO2 emission over past 10 years'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>                                                                     CO2 emission over past 10 years</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Co2 New)' name='federated.0to20yi107f7hs1fw6kit010hryj' />
          </datasources>
          <datasource-dependencies datasource='federated.0to20yi107f7hs1fw6kit010hryj'>
            <column caption='Co2' datatype='real' name='[co2]' role='measure' type='quantitative' />
            <column aggregation='CountD' caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[co2]' derivation='Sum' name='[sum:co2:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0to20yi107f7hs1fw6kit010hryj].[none:country:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:country:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Africa&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Antarctica&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Asia&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Australia&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Europe&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Europe (excl. EU-27)&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Europe (excl. EU-28)&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;North America&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;North America (excl. USA)&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;South America&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;World&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='%null%' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.0to20yi107f7hs1fw6kit010hryj].[none:year:qk]' included-values='in-range'>
            <min>2013</min>
            <max>2023</max>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0to20yi107f7hs1fw6kit010hryj].[none:country:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0to20yi107f7hs1fw6kit010hryj].[sum:co2:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.0to20yi107f7hs1fw6kit010hryj].[none:year:qk]</column>
            <column>[federated.0to20yi107f7hs1fw6kit010hryj].[none:country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0to20yi107f7hs1fw6kit010hryj].[none:country:nk]' />
              <text column='[federated.0to20yi107f7hs1fw6kit010hryj].[sum:co2:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0to20yi107f7hs1fw6kit010hryj].[none:country:nk]</rows>
        <cols>[federated.0to20yi107f7hs1fw6kit010hryj].[sum:co2:qk]</cols>
      </table>
      <simple-id uuid='{E563B85E-A141-434E-A08C-DC6F9735651F}' />
    </worksheet>
    <worksheet name='Co2 emission by other factors'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>                                                                              CO2 emission by other factors</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Co2 New)' name='federated.0to20yi107f7hs1fw6kit010hryj' />
          </datasources>
          <datasource-dependencies datasource='federated.0to20yi107f7hs1fw6kit010hryj'>
            <column caption='Co2' datatype='real' name='[co2]' role='measure' type='quantitative' />
            <column aggregation='CountD' caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[co2]' derivation='Sum' name='[sum:co2:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0to20yi107f7hs1fw6kit010hryj].[none:country:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:country:nk]' member='&quot;International transport&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Kuwaiti Oil Fires&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0to20yi107f7hs1fw6kit010hryj].[none:country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0to20yi107f7hs1fw6kit010hryj].[none:country:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.0to20yi107f7hs1fw6kit010hryj].[none:country:nk] * [federated.0to20yi107f7hs1fw6kit010hryj].[sum:co2:qk])</rows>
        <cols>[federated.0to20yi107f7hs1fw6kit010hryj].[none:year:qk]</cols>
      </table>
      <simple-id uuid='{53A14FDD-FE3E-42CB-8CF0-94C026B666A9}' />
    </worksheet>
    <worksheet name='Donut chart for cement co2 emission'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>                                                                             Donut chart for cement co2 emission</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Co2 New)' name='federated.0to20yi107f7hs1fw6kit010hryj' />
          </datasources>
          <datasource-dependencies datasource='federated.0to20yi107f7hs1fw6kit010hryj'>
            <column caption='AVG(0.0)' datatype='real' name='[Calculation_1068197548182962188]' role='measure' type='quantitative' user:unnamed='Sheet 5'>
              <calculation class='tableau' formula='AVG(0.0)' />
            </column>
            <column caption='AVG(0.0)' datatype='real' name='[Calculation_1068197548182999054]' role='measure' type='quantitative' user:unnamed='Sheet 5'>
              <calculation class='tableau' formula='AVG(0.0)' />
            </column>
            <column caption='Cement Co2' datatype='real' name='[cement_co2]' role='measure' type='quantitative' />
            <column aggregation='CountD' caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[cement_co2]' derivation='Sum' name='[sum:cement_co2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1068197548182962188]' derivation='User' name='[usr:Calculation_1068197548182962188:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1068197548182999054]' derivation='User' name='[usr:Calculation_1068197548182999054:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0to20yi107f7hs1fw6kit010hryj].[none:country:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Africa&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Antarctica&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Asia&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Australia&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Europe&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;North America&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;South America&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0to20yi107f7hs1fw6kit010hryj].[none:country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0to20yi107f7hs1fw6kit010hryj].[usr:Calculation_1068197548182999054:qk]' field-type='quantitative' fold='true' scope='cols' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='cell-w' value='432' />
            <format attr='cell-h' value='432' />
            <format attr='cell' value='54' />
            <format attr='cell-q' value='270' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <text column='[federated.0to20yi107f7hs1fw6kit010hryj].[sum:cement_co2:qk]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0to20yi107f7hs1fw6kit010hryj].[usr:Calculation_1068197548182962188:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <wedge-size column='[federated.0to20yi107f7hs1fw6kit010hryj].[sum:cement_co2:qk]' />
              <text column='[federated.0to20yi107f7hs1fw6kit010hryj].[sum:cement_co2:qk]' />
              <color column='[federated.0to20yi107f7hs1fw6kit010hryj].[none:country:nk]' />
              <text column='[federated.0to20yi107f7hs1fw6kit010hryj].[none:country:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='2' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0to20yi107f7hs1fw6kit010hryj].[usr:Calculation_1068197548182999054:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <text column='[federated.0to20yi107f7hs1fw6kit010hryj].[sum:cement_co2:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#ffffff' />
                <format attr='size' value='0.31784531474113464' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>([federated.0to20yi107f7hs1fw6kit010hryj].[usr:Calculation_1068197548182962188:qk] + [federated.0to20yi107f7hs1fw6kit010hryj].[usr:Calculation_1068197548182999054:qk])</cols>
      </table>
      <simple-id uuid='{2F33AC17-3BEB-4904-ACE8-0512ACF8FB09}' />
    </worksheet>
    <worksheet name='Overall contribution of india in co2 emission'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>Overall contribution of india in co2 emission</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Co2 New)' name='federated.0to20yi107f7hs1fw6kit010hryj' />
          </datasources>
          <datasource-dependencies datasource='federated.0to20yi107f7hs1fw6kit010hryj'>
            <column caption='Cement Co2' datatype='real' name='[cement_co2]' role='measure' type='quantitative' />
            <column caption='Coal Co2' datatype='real' name='[coal_co2]' role='measure' type='quantitative' />
            <column aggregation='CountD' caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Flaring Co2' datatype='real' name='[flaring_co2]' role='measure' type='quantitative' />
            <column caption='Gas Co2' datatype='real' name='[gas_co2]' role='measure' type='quantitative' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column caption='Oil Co2' datatype='real' name='[oil_co2]' role='measure' type='quantitative' />
            <column caption='Other Industry Co2' datatype='real' name='[other_industry_co2]' role='measure' type='quantitative' />
            <column-instance column='[cement_co2]' derivation='Sum' name='[sum:cement_co2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[coal_co2]' derivation='Sum' name='[sum:coal_co2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[flaring_co2]' derivation='Sum' name='[sum:flaring_co2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[gas_co2]' derivation='Sum' name='[sum:gas_co2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[oil_co2]' derivation='Sum' name='[sum:oil_co2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[other_industry_co2]' derivation='Sum' name='[sum:other_industry_co2:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0to20yi107f7hs1fw6kit010hryj].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0to20yi107f7hs1fw6kit010hryj].[sum:coal_co2:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0to20yi107f7hs1fw6kit010hryj].[sum:oil_co2:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0to20yi107f7hs1fw6kit010hryj].[sum:cement_co2:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0to20yi107f7hs1fw6kit010hryj].[sum:gas_co2:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0to20yi107f7hs1fw6kit010hryj].[sum:flaring_co2:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0to20yi107f7hs1fw6kit010hryj].[sum:other_industry_co2:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0to20yi107f7hs1fw6kit010hryj].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0to20yi107f7hs1fw6kit010hryj].[sum:coal_co2:qk]&quot;</bucket>
              <bucket>&quot;[federated.0to20yi107f7hs1fw6kit010hryj].[sum:oil_co2:qk]&quot;</bucket>
              <bucket>&quot;[federated.0to20yi107f7hs1fw6kit010hryj].[sum:cement_co2:qk]&quot;</bucket>
              <bucket>&quot;[federated.0to20yi107f7hs1fw6kit010hryj].[sum:gas_co2:qk]&quot;</bucket>
              <bucket>&quot;[federated.0to20yi107f7hs1fw6kit010hryj].[sum:flaring_co2:qk]&quot;</bucket>
              <bucket>&quot;[federated.0to20yi107f7hs1fw6kit010hryj].[sum:other_industry_co2:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0to20yi107f7hs1fw6kit010hryj].[none:country:nk]'>
            <groupfilter function='member' level='[none:country:nk]' member='&quot;India&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0to20yi107f7hs1fw6kit010hryj].[none:country:nk]</column>
            <column>[federated.0to20yi107f7hs1fw6kit010hryj].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='cell-w' value='150' />
            <format attr='cell-h' value='50' />
            <format attr='cell' value='50' />
            <format attr='cell-q' value='250' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0to20yi107f7hs1fw6kit010hryj].[:Measure Names]' />
              <text column='[federated.0to20yi107f7hs1fw6kit010hryj].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0to20yi107f7hs1fw6kit010hryj].[Multiple Values]</rows>
        <cols>([federated.0to20yi107f7hs1fw6kit010hryj].[none:country:nk] / [federated.0to20yi107f7hs1fw6kit010hryj].[:Measure Names])</cols>
      </table>
      <simple-id uuid='{DED30FE7-C440-41BA-AA9F-DA29AF937870}' />
    </worksheet>
    <worksheet name='Top 10 CO2 per captia emitting countries'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>                                                                               Top 10 CO2 per captia emitting countries</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Co2 New)' name='federated.0to20yi107f7hs1fw6kit010hryj' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='top' datatype='integer' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='10'>
              <calculation class='tableau' formula='10' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0to20yi107f7hs1fw6kit010hryj'>
            <column caption='Cement Co2' datatype='real' name='[cement_co2]' role='measure' type='quantitative' />
            <column caption='Co2 Per Capita' datatype='real' name='[co2_per_capita]' role='measure' type='quantitative' />
            <column aggregation='CountD' caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[co2_per_capita]' derivation='Sum' name='[sum:co2_per_capita:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0to20yi107f7hs1fw6kit010hryj].[none:country:nk]'>
            <groupfilter count='[Parameters].[Parameter 1]' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([cement_co2])' function='order' user:ui-marker='order'>
                <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                  <groupfilter function='level-members' level='[none:country:nk]' />
                  <groupfilter function='union'>
                    <groupfilter function='member' level='[none:country:nk]' member='&quot;Africa&quot;' />
                    <groupfilter function='member' level='[none:country:nk]' member='&quot;Antarctica&quot;' />
                    <groupfilter function='member' level='[none:country:nk]' member='&quot;Asia&quot;' />
                    <groupfilter function='member' level='[none:country:nk]' member='&quot;Asia (excl. China &amp; India)&quot;' />
                    <groupfilter function='member' level='[none:country:nk]' member='&quot;Australia&quot;' />
                    <groupfilter function='member' level='[none:country:nk]' member='&quot;EU-27&quot;' />
                    <groupfilter function='member' level='[none:country:nk]' member='&quot;EU-28&quot;' />
                    <groupfilter function='member' level='[none:country:nk]' member='&quot;Europe&quot;' />
                    <groupfilter function='member' level='[none:country:nk]' member='&quot;Europe (excl. EU-27)&quot;' />
                    <groupfilter function='member' level='[none:country:nk]' member='&quot;Europe (excl. EU-28)&quot;' />
                    <groupfilter function='member' level='[none:country:nk]' member='&quot;North America&quot;' />
                    <groupfilter function='member' level='[none:country:nk]' member='&quot;North America (excl. USA)&quot;' />
                    <groupfilter function='member' level='[none:country:nk]' member='&quot;South America&quot;' />
                    <groupfilter function='member' level='[none:country:nk]' member='&quot;World&quot;' />
                    <groupfilter function='member' level='[none:country:nk]' member='%null%' />
                  </groupfilter>
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0to20yi107f7hs1fw6kit010hryj].[none:country:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0to20yi107f7hs1fw6kit010hryj].[sum:co2_per_capita:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.0to20yi107f7hs1fw6kit010hryj].[none:country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.0to20yi107f7hs1fw6kit010hryj].[none:country:nk]' />
              <text column='[federated.0to20yi107f7hs1fw6kit010hryj].[sum:co2_per_capita:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0to20yi107f7hs1fw6kit010hryj].[sum:co2_per_capita:qk]</rows>
        <cols>[federated.0to20yi107f7hs1fw6kit010hryj].[none:country:nk]</cols>
      </table>
      <simple-id uuid='{4811237A-FCE8-4D79-9FB9-84D021DE1938}' />
    </worksheet>
    <worksheet name='emission rate by internal factors'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>                                                                              Emission rate by internal factors</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Co2 New)' name='federated.0to20yi107f7hs1fw6kit010hryj' />
          </datasources>
          <datasource-dependencies datasource='federated.0to20yi107f7hs1fw6kit010hryj'>
            <column caption='Cement Co2' datatype='real' name='[cement_co2]' role='measure' type='quantitative' />
            <column caption='Coal Co2' datatype='real' name='[coal_co2]' role='measure' type='quantitative' />
            <column caption='Flaring Co2' datatype='real' name='[flaring_co2]' role='measure' type='quantitative' />
            <column caption='Gas Co2' datatype='real' name='[gas_co2]' role='measure' type='quantitative' />
            <column-instance column='[year]' derivation='None' name='[none:year:qk]' pivot='key' type='quantitative' />
            <column caption='Oil Co2' datatype='real' name='[oil_co2]' role='measure' type='quantitative' />
            <column caption='Other Industry Co2' datatype='real' name='[other_industry_co2]' role='measure' type='quantitative' />
            <column-instance column='[cement_co2]' derivation='Sum' name='[sum:cement_co2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[coal_co2]' derivation='Sum' name='[sum:coal_co2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[flaring_co2]' derivation='Sum' name='[sum:flaring_co2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[gas_co2]' derivation='Sum' name='[sum:gas_co2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[oil_co2]' derivation='Sum' name='[sum:oil_co2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[other_industry_co2]' derivation='Sum' name='[sum:other_industry_co2:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0to20yi107f7hs1fw6kit010hryj].[sum:cement_co2:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0to20yi107f7hs1fw6kit010hryj].[sum:coal_co2:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0to20yi107f7hs1fw6kit010hryj].[sum:flaring_co2:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0to20yi107f7hs1fw6kit010hryj].[sum:gas_co2:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
          </pane>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0to20yi107f7hs1fw6kit010hryj].[sum:oil_co2:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
          </pane>
          <pane id='6' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0to20yi107f7hs1fw6kit010hryj].[sum:other_industry_co2:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
          </pane>
        </panes>
        <rows>([federated.0to20yi107f7hs1fw6kit010hryj].[sum:cement_co2:qk] + ([federated.0to20yi107f7hs1fw6kit010hryj].[sum:coal_co2:qk] + ([federated.0to20yi107f7hs1fw6kit010hryj].[sum:flaring_co2:qk] + ([federated.0to20yi107f7hs1fw6kit010hryj].[sum:gas_co2:qk] + ([federated.0to20yi107f7hs1fw6kit010hryj].[sum:oil_co2:qk] + [federated.0to20yi107f7hs1fw6kit010hryj].[sum:other_industry_co2:qk])))))</rows>
        <cols>[federated.0to20yi107f7hs1fw6kit010hryj].[none:year:qk]</cols>
      </table>
      <simple-id uuid='{6E2C2243-4BA2-4B98-B578-18B0E9280E28}' />
    </worksheet>
  </worksheets>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' name='Co2 emission by other factors'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0to20yi107f7hs1fw6kit010hryj].[none:country:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0to20yi107f7hs1fw6kit010hryj].[none:country:nk]</field>
            <field>[federated.0to20yi107f7hs1fw6kit010hryj].[none:year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{8E72E8C0-2A61-470F-A534-0CB9295412EF}' />
    </window>
    <window class='worksheet' name='Top 10 CO2 per captia emitting countries'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0to20yi107f7hs1fw6kit010hryj].[none:country:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0to20yi107f7hs1fw6kit010hryj].[none:country:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{4FAB02EC-7A89-4C8C-8895-2C4AD5A2CA0B}' />
    </window>
    <window class='worksheet' name='emission rate by internal factors'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0to20yi107f7hs1fw6kit010hryj].[none:year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D15F478E-A6A6-47B8-9895-6BD271B116BA}' />
    </window>
    <window class='worksheet' name='  Donut chart for  coal co2 emission'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.0to20yi107f7hs1fw6kit010hryj].[none:country:nk]' type='color' />
            <card pane-specification-id='1' param='[federated.0to20yi107f7hs1fw6kit010hryj].[sum:coal_co2:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0to20yi107f7hs1fw6kit010hryj].[none:Calculation_1068197548179398659:qk]</field>
            <field>[federated.0to20yi107f7hs1fw6kit010hryj].[none:country:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D1A2CF7C-DA4E-4744-9DEC-D0BDB803BEE2}' />
    </window>
    <window class='worksheet' name='Donut chart for cement co2 emission'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.0to20yi107f7hs1fw6kit010hryj].[none:country:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0to20yi107f7hs1fw6kit010hryj].[none:country:nk]</field>
            <field>[federated.0to20yi107f7hs1fw6kit010hryj].[none:year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{75F4D224-7C04-41B7-BA3F-18FC3E6A0BD4}' />
    </window>
    <window class='worksheet' name='CO2 emission over past 10 years'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0to20yi107f7hs1fw6kit010hryj].[none:country:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0to20yi107f7hs1fw6kit010hryj].[none:country:nk]</field>
            <field>[federated.0to20yi107f7hs1fw6kit010hryj].[none:year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E392A0A8-8645-4235-A8C8-C9360164EFD1}' />
    </window>
    <window class='worksheet' name='CO2 emission in 2020'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0to20yi107f7hs1fw6kit010hryj].[none:country:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0to20yi107f7hs1fw6kit010hryj].[none:country:nk]</field>
            <field>[federated.0to20yi107f7hs1fw6kit010hryj].[none:year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A05395EC-EF0C-4A82-9EED-26EAC848DFDD}' />
    </window>
    <window class='worksheet' maximized='true' name='Overall contribution of india in co2 emission'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0to20yi107f7hs1fw6kit010hryj].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-height' />
        <highlight>
          <color-one-way>
            <field>[federated.0to20yi107f7hs1fw6kit010hryj].[:Measure Names]</field>
            <field>[federated.0to20yi107f7hs1fw6kit010hryj].[none:country:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{4C41C4BA-8675-404F-B583-BAEB3C1CD8C1}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='  Donut chart for  coal co2 emission' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='CO2 emission in 2020' width='192'>
      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
      QmCC
    </thumbnail>
    <thumbnail height='192' name='CO2 emission over past 10 years' width='192'>
      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
      7cRPffcAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Co2 emission by other factors' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAe5klEQVR4nO2dyY8jWWLefxHBfd+3ZO5Lbd3V1bN6Zjy7xwIs24BhQYJhQP4DfPPdxtx8
      MOCbffFBOhgWLEHSwIIEe+yxZ2xpRrP2VpWV+165kUkmd8buQxazK5fqIruLRWby/YBEJskX
      L794ER8j4r0vXki2bdsIBCOKPGgBAsEguXEGqNfriIOW4HVx4wxgWdagJQhuETfOAALB60QY
      QDDSCAMIRhpH5496vY5pmoPU0hWtVktcBAteG+cGCAQCg9TRNZIkEQwGkSSpq/KGYeBwOF5d
      sMeylmVh2zaKogxUh2maSJKELHd3MO+XDtu2MU2zL3X3ul2ArtrDtm1xCiQYbYQBBCONMIBg
      pBEGEIw0wgCCkaa7S+s+06iW2D4sc2cqx8raBk5fmIDDoFhtMz8zzsrKGsncNJlEaNBSBbeM
      oTCAw+1Dso6QHG5mpydZ2XqGpciMJ4IsPl5l/tE77G+skooFsCyrp/EKy7IwDOO1l7Vt+/xn
      kDosy0KSpK4zUv3S0c+6e90unWW6YSgM4HZ7ALC1Jsub+9y/O8/K0jKqpuF2KbTabQzTPu/v
      lmW563EAoOu++l7Kdnb+bvvf+6VDkqTzn0Hq6Hfd/douQ2GAwsEuuqZzXK4iWTo7z47IZxMc
      V1TuPrjH5vo641PT5xu51w3ej7Kdb5pB6+h33TetPWzb7nr/sG0b6abdEVatVsVI8AuIkeCL
      iJFggaAHhAEEI40wgGCkEQYQjDTCAIKRRhhAMNIIAwhGmqEYCKufFtk8LPPW3DhPFlcIxjM4
      zTonVZW5mTFWVzdJZCfIpaKDliq4ZQyFAVy+EA4KlI+OyMzcobS/hYbCZDrM0pN15j/3iP31
      NaxE+DwX0u1AWC+5oV7K9poF6peOXrNA/dLR0dJtZqef26WjpRuGwwAu1/PfCieNBrphIdkm
      zZaE1+ukUW+iG9Z5DsjhcPQ0jN7tKGIvZXsdCe6Xjl5Hgvulo7Pj9aPuXsreyJHgwsEupmGi
      uSIorVPyE9NMjmdoS14W7t+jWdxnenZ20DIFt5ChOAIks+Mks+MAxMKd2Sk8+J/H/6dn5wcj
      THDrGYojgEAwKIQBBCONMIBgpBEGEIw0wgCCkUYYQDDSCAMIRpqhGAfooDerLK5t4Q1E8Mka
      pZrK7PQYa2vbxDN58pn4oCUKbhlDZQDL0NB0E6ndQnIoTGWiLC9ucucLj9hfW8NKRUUW6BIi
      C3SRG5kF6tCoVUmNT1Pe30K3nNQbNoGAi2qlhmbYIgt0DSILdJEbmQXqEM1NQb3I5MwCM1N5
      DFeI+Xv30E+LzM7PDVqe4BZyxVaV0wrhSBgA27YwLRtHF99ynblbqrUaoWDwU4mRJJnJmY93
      9InAmY6J6ZlPVZ9A8DIq9Tb/81cbVw1wsH9As1bipFwnFvbyZKvAFx7eZX9/n9z4OIVnz/AF
      /Zye1kjnJ6kebaP4ImytLDL34F2cskXjtEipYXB3YQ5F7m2GM4GgX9i2TaOt88NfrvPLpX2+
      9tb49dcAbd1iYTzKftPB5HSAo71NbMnJaamE5ArgQGNmdoaD4yMaLZNa+YBMLk8+k2BxaREZ
      hYzPQamlk/S73vR6CgQXsG2bvUKN//GLNRa3Cnzr3Sn+9e9/A6/bcdUA4UgYh1NBdjkIKm4O
      djZJp3IcFk4IhcJIsgPFaqEoCkG/l8ZplXA4TDjgZO+wSCQcxVIb7Nd07uWdLxUEvc9/KRD0
      Qq2p8sulff7fB9vYwPe+MMPv/9Y7uJxnp/RvfG7QH//wv1FoufgHX7vPgRZgLhfruQ4xN+hF
      xNygl8uaPNkq8OP3t9k9rvD5Ozm+8XCCXOLqPmPb9pvtBnX6onznQZY/+bO/4N3v/e6b/NeC
      W45t2/xm5YA/+fEi6ViA731+hvtTSeRXXIO+0gCGVuekbJJO+jitqUTCn/55wl/60hf5xd/8
      XwKxLBOp8KeuRyDoYNs2K7sl/vj/PMHvdfIv/8kXycWDKMqnfD7A+7/+Obrs485kitX1Xcan
      c9QbDoKuBn/7q3XuTmep6CbZiJ/trT1yU+MUjk/wh2LUirtkJu9QPtykbSg8fOchzheEyLZB
      S/LwzlyAQqVBVFwgCz4ltm1zcFLnj370mEZb4/e+/YCF8XjXI/MdrhggFEtgI3F8XMTWG5Rq
      TZyE8AXDjI+P45JtFhZm2H76EWarwEl9nOm5eUqHR8RjCcqlEp5AhIBpoJk2zhdOkZuazf3p
      LDtHNR4lrz7vyzZVFp+uEE5ksZqlj7NAG7vEUzkmcsneW0pwq2i0NH61vM9ff7RLo6XxO9+6
      z7vzmfPz+89sgHQqjY0EegvZ7SeVSpwVU9yEvTaeUAyXLJHJZPD4g0STMXxuF450klLxkHQ8
      xe7aYxK5WXzOi4ehDz98n69+7es4rcfsHFdYGLt4EXx6sEdNs3HUa8iWzOxYgpWn29z74iOe
      ra1hWXGRBbrEKGSBGi2Vpd1D/ubxLgfFGm/PJPln37lPPhlClqULdfWaBepLL5Cu6zidV7tA
      1xff48PlLRyeEH//e9/G7bhokFb5kM2Sga1WkSyLgNeJZti4IklqpRIP7s2LXqBL3MZeIMuy
      KdVavL96yHtrhxye1Lg3meTvvj3B7FgMp+Pl69prFmjoHpF0cnyAwxfBo5iUaiqZZIzD/T3i
      6TFcDlkY4BJvygC6YfKsUGPtWYnDUp2A10XQ5ybkdxP0uQh4XXhdCiG/B6fj+jbpjMRWGirV
      egvLBt2w0A0T3bRQNYOd4ypPtws4HQqP5jI8ms8wngjgcl0/pnSZz2yA/d1NdNlHzO+iVKmy
      vrrCg3e/RDo+HL02wgAXed0GsG2btmZQrDRZf1Zi86DC1uEp9ZZGNh5gJhclGw/QUg2qTZVq
      Q6XW1Ki3NOpNlaaqA+ByOnA7FZwOBd0waWsGqm7icTkI+934PU7cTgdOh4zToZz/zsYCvDWT
      IuB1nW/jfj4j7GKtZoPThoxildg7NRmfXaDZbA3Nzi/oD6f1Nr9c2mdjv8xeoUpbNYiHvUym
      Q7w9m+IffW2BaMDziV2LnVMgRVEwTAtVN9F0E1U3cDkUPG4HHpcD5fmO2ctO3U8uKlC8SPop
      bdlDOhrG53Hhkk2OTyqkhAluJbph8u//6894MJ3kKw/yjKdCRAIeJEn6VDupJEnPv9EV8PZJ
      9Gvk0trJ3Hv7nQvvzN558AblCN4ktm3zpz95yt3JBL/77Qcjmc0aqhtiBG+W5d0TPto45p9+
      8/5I7vwwZLdE3jRswDAtTMvCNG1My0I3LCIBzyszKIOm0dL4T3/xG/7V7/0d3M7ub+u8bYyk
      ATb2yyztFIkEPEQCHkJ+Nz63E4cCRlOn1lQp1VoUKy1Oqk3KtTa1pkqzrV/otrMsG0WRUGQZ
      RT773dYMLNs+v/CLBT0kwn7yyQCfW8gR9LkHvfrYts0f/Pf3+a0vzTKWuDoiP0qMpAF8Hiey
      JLFzVOHD9SOqjbPuu5aq43U7CXhdxENe4mEf48kw78ymCfrOTNLprnPIEpLEtd2glmWj6gYt
      1aBca1GoNFnZKfKXP1sjlwjyrUdT3JtK4HYOpvl/+niXVtvgu58Xt5oO3UDY0e4qhZaHgFSn
      3NCYmRxjfWuPaDLLdD59o8cBkGSWd4r85INt1vZKvDWT4rufn2YiFb6wPv0cBzgu1fi3/+Wn
      /Jt/8Q2iwU/uprmJ9wN8tnGAAaO36tRUUDDQbRdz+SjLy7s8+PIj9lbXsKzkjc4CKQrcGY9x
      ZzyGbpj8evmAP/yr9zFtm++8O8UX7mTxuBx9ywKVa23+ww9+yT//7gOCXucrczvDkgXq57xA
      Q3UEqJcLbO3tsX+iMp7w43IqyLIDyxNAbbS4f3f2Rh8Brqvbtm2eFWv86NcbfLRxzDtzGb75
      cJxsIoRDkV+5np90BGhrBttHp7y/esiTzQKGZfHVB3l++ysLXbXfKBwBhsoAANgWbc1AwaDa
      1IlFQpwUC4RjCZzK7c4CNVWdny/u8eP3tqg1NfxeF2OJIPlkiHwyRDzsRULCtG0s62zKGuN5
      zKDa1Kg21LOcTUPlpNqkVG0xkQ7zaD7Dg6kUibC3bzupMMAb4jYb4MWyiqJwWm/zrFjjWaHK
      XqHKSaWFJJ1tXEWWkGUJWQKv20nYf9abFfK7CfncRAIeMvEA8qV2uglp0M9S9kZfAwg+RpIk
      okEv0aCXt6ZTLy33aaZGFHyMaDXBSCMMIBhphAEEI40wgGCkEQYQjDTCAIKRZqi6QQ21ycr6
      JgZOAg6D04bG9ESWzZ0DIvE0MxPZQUsU3DKGygAOt490PEK5ZWJqOvPjMZZXn/Hgy59jb3UV
      y7JudBaoHzpGYV6gkXlGWLtyzNreCfOzUxztbfHsqEkqFWJ7YwsbRTwj7BrEM8IucqNHgp3+
      CHOTZzv5/J07NFWDoN9HrVrBFxQ35QteP0NlAMXhIp5InL8OOc/ungqFI4OSJLjliF4gwUgj
      DCAYaYQBBCONMIBgpBEGEIw0wgCCkUYYQDDSDL0BjHadDz/4gIPC6aClCG4hQzUQdh3HewfM
      vPWQ/fVV0vHQlSyQaZrI8sfTh1weCjcM40qZy/GBTqyhg/181oVXLWOa5vmjoK5b5kUthmG8
      tN7Ly7yYp3mVlhdzMp1Yxict09F0Ocpx3TKapp2/92KZF+MfHf2dvy+3/8u0vJjVeZWWzja8
      bptdXgY4L/cyLYpyFqvRdX34DeB0SjQbTQzTvjYL1E1G5HKZly3zSbMPXH6/05CfNQt03Xud
      deymHkmSusoCdZbpdc7/V5XtfG7bNpIkdb09XreODr1kgVwu1/CfAiXGp6kf7zM5LeaxFLx+
      hv4IIMkKM3Pzg5YhuKWcG6DZbPb8kOFB0G63L5xPvorOc6ted9nOvQDdxpD7paNzP8AwtMfl
      64NB6OjlFAheMIDb7b4RBtB1HY/H03V5YYA3o6Ofdfe6XYCu2+PcAL2s6CCRZRlFUcQNMc8R
      N8RcpNcbYob+Ilgg6CfCAIKRRhhAMNIIAwhGmqEYB6iVC2welHkwN87K2gayO0BA0TmpqcxN
      51ld3yKeGSefjg1aquCWMRQG8AQiOOUistPD1HiOzf0TmiZMZaIsLW5w5/OP2F9fw0pGxLxA
      lxDzAl3kRs4L1AmUma0qG/tl7i3MsrS4SKMJfr+LWq2OZlyfBeoG0Q3afx2iG/QzUDjYxTIt
      irUWktlme++Q6ckxNEeAhfv3UEvHzM7PDlqm4BYyFEeAZHac5PNpPzPpzPn7k4Hnv2fEzi/o
      D0NxBBAIBoUwgGCkEQYQjDTCAIKRRhhAMNIIAwhGGmEAwUgzFOMAlZMjNg/KPFyY4KPFVQLR
      JC6zTqmuMTs1xtrGDrH0GBPZxKsrEwh6YCgMEIgkcBdKlI8L5OfvUnq2RRuF6Vyc5aUt7n3h
      Ec/W1rDSMZEFuoTIAl3kRmaB4Gwl3W4HR+VTVN1CtnUqVYtQyEPp5BTtJfMCdYPIAvVfx03N
      Ag2FAU6LR7icLnRPlIBeIjM7h8NqU6ypzE3H2d/bYX5+btAyBbeQoTBAPJ0jnn7+Iuh7/oeT
      MV8QgLHxyYHoEtx+RC+QYKQRBhCMNMIAgpFGGEAw0ggDCEYaYQDBSCMMIBhphmIcoINaL7O4
      voPHF8IrqZzWNWamcqxvPiOayjI1lhq0RMEtY6gMINkmmmYiO1QcTiez+TDLy7vc/9Ijnq2u
      YVkJkQW6hMgCXeTGZoEA6rU68UyO2skRhm1QKGnEoj6O9o/QLUlkga5BZIEuciOzQB1i2UmM
      owMyC3dxyQaVhk4iFqZ4fER+XjwjTPD6GSoDIEmkMrnnL9wknz8IJvnCXEECwetE9AIJRhph
      AMFIc+UUaP/gAFtrER+bxuN4+YWmobbQkGnVW4T8LgzZhdfV2wVTLxeyAkE/uLLH7m0sEUjP
      oG+vkEmn2T4q4nK42N09IJ9L4ndJLK7vcX9unIoOm0ubvPP2FPizrzTA//qrP+O4ofAPv/GQ
      Az3EnXy8X+slEHTFlVOgWGYMo1lFMwyajRqm7KWws0EmG6fetjg5reCVLRptFW8wythYFrcC
      Vhf94d5Qkt/+5rv88Z/+gLbeXT+tQNBPrnxlj+XGcco2DdWgXD5lMptAj/gI+L00NRv0OtVY
      hng0hORw42j5cAbj+FyuV/6zr371K/zkRz8kMTbHZDrclxUSCHrhigG8Xi8AYTeEQ6GzNz1u
      AEIuAC+h6Mfls/mJrv+ZZaiotoOJhIeTaouI79WmEQj6yRUD2JaFaVkoigPb/nhUzTRNLMs6
      f0j1p7mArdRVvvju2xwcnZKN+a98bhstPlpcJZbKoVePOW1oTE/m2NjeJ5LIMDMuxgMEr5dL
      BrD56IPf4HS58Eay+N1QLJxw795dPnz/VwTCCaKhML5IEL3ZxO3xUiydkk3H2X92SDafxyG/
      3BiPn3zE17/+TfRqgb1CjYWx6IXPSwfPaJlQqZRxSW7mxmMsr+zx4MufY291FctKiSzQJUQW
      6CKfMQuk43RHuHt3mqcr67RqJiA9r9jCMCzKpRM0s0G5BmZthVq9QbWSoanZRFMGAY/zpf9s
      JpfkB3/+53hCCb737bevfB4Ih/DUbCxDx7BNDgotkskQu1s7GLYiskDXILJAF/mMWSAnll7h
      8eMPiaQmaVYLYJ/taP5QjDsL82yvrCLJTsayMUp2HcUbJJVMsbO1RrnS+kQD5Gfvk5+9/9LP
      3aEUs3kXituHU7Kotw3CQT+V0zKBUPSlywkEnxbJ7vYYPiRUq1WCwWDXRwDDMLr+9uilbK9H
      gH7p6PUI0C8dtm1jmmZf6u51u8ANe0qkQDAohAEEI40wgGCkEQYQ9BXz4ANsUx+0jJciDCDo
      K9r7f4R1sjpoGS9FGEDQV5TkXazjpUHLeCnCAIK+IqfvYx4vDlrGSxmue4KB/c2nHLe9BKU6
      labO5HiGrb0jwrEUc5O5V1cgGCqUxDzaz/4jtm0P5Q1QQ2UAtVGhjRu3YmPhZX4iwdLaPm+d
      Z4EskQW6xNBngRQflt7C1FqgfJz+HdIs0GAxTJN2o8pesc1EwsfOQZ1sJsLGyhqy5BBZoGsY
      +iyQraBExpGqeyjJhb7ruNHzAvlDMe4/iLJgWkhYqLqJ1+Mm1mzg9l6NTwtuAJKEkrqPdbx4
      xQDDwPBdBEsSDoeC4nDi83qQJAmfP4DyCTFrwXAjp+5hHj8dtIxrGT4DCG4dcvIOVnG56+ul
      N4kwgKDvyN4otqGB3hi0lCsIAwj6jyQhBzNY1cNBK7mCMIDgjSCnzy6Ehw1hAMEbQUkN54iw
      MIDgjSDHZrBKG4OWcQVhAMEbQfInsdtVbKM9aCkXGKqBMENtsrK+iWrKBBSdastgYizNzkGB
      YCTBwnR+0BIFnxJJVpDDY1inuyiJ+UHLOWeoDOBwe4mH/DRtF0arxcKkX2SBXsHQZ4FeJDaP
      cfQUOzItskDX0Sof8nT7mLmZKVStzvpuhbGxGMtPFvF4/CILdA1DnwV6kexbGNs/xfHgH/dN
      x43OAnnCab7yhRiyrJBLxzEtG4eikMzoKI6XzzckuBnIiTtYv/qDoRoRHioDSLKM2+0+f90x
      sdMpJtG9DUjeCLZaA3t4psYXvUCCN4akOJGDGezK7qClnCMMIHijyKn7mEfDMyAmDCB4oyhD
      do+wMIDgjSIn72EN0b0BwgCCN4rkT2BrdWy9NWgpgDCA4A0jSRJyIAWNwqClAMIAggEgJ+/B
      ycqgZQA3wABa85T33/+A3YOTQUsRvCaUIbo3YKgGwq6j8KzA/MOH7K+tYaWjV7JApmkiy/L5
      68tD4YZhXClzOT7QiTV0sG0by7JeuYxpmjidzpcu86IWwzBeWu/lZV7M07xKy4s5mU4s45OW
      6Wi6HOW4bhlN087fe7HMi/GPjv7O35fb/1ot4Wn0n/w7zMLyJ2/8F9pA69OkWkNvAI9HplKu
      ohn2tVmgbjIil8u8bJlPehLJ5fc7O8JnzQJd915nHbupp/PEzldlXzrL9PK0lZfpu+7zzsxv
      XW2P2ATy7/whSpfnH6Zhoji6a2fbsgEbqZtslH0DDBDLT7O3s83cwtygpQheF5KE5I0idxtw
      M4zuy97kMNx1SJLM+OT0oGUIbinnBqjX6z3nvwdBq9XqKU344jns6ywL9DTha7909DrpbD/b
      o19199oeQNdtcm6AQCDQ1QKDRpKknp4SaZpm1+fpvZTt3AzT7Ybpl47ODTHD0B6XL5AHoePW
      nQJ9Vnr5BuulLHT/LdNPHb1OOd7P9uhX3f1sj1tvgF4apF9lhY7h1CFJEsr3v//973e9xBCg
      qiput/vaFW3VTvn1R0vk0lEef/SYwmkdW62xubZEUwpi149Y2zslnYhgWyarH/4c1ZuhvL/O
      5uY2DreHrc1NtvYOkY0muwcFItEoiixROt5nZXufkBMWV9doqAbVwiFLT5eRFNjc2qGlQzQU
      oFYu8NHKJomwlydPlynX2tRLh+zs7uF0OVlaWqFtQDQcwDI0Pnzvl3giGfY3l9je3celwPL6
      JvW2Qa10yMbmHvF0CkWSON7fYfvgBJfVZmVjE9WSeba5yu5BkVQmxdP3foHki+H3OFGbVX7x
      3mPGcykef/ghBycVUGtsbu9gyW72d9aptU2i4SC2bbOx+GvqUoh6cZfNzS0Ut4e15WVKlQaN
      02O2d/fwBmN4XAqVkyMW13eI+p0sLq1QbWqcFp6xs7uP3+di8ekKmqkQCflpVku892SFTDzM
      k8eLnFQatGonbG5u4Q6E2FpfpVCqk0xEsU2Dpx/8AiuQpri7xtb2Lg6Hg7X1deqqSdTv5G9+
      9mvyE3kkoHi4x/ruEX7FZGltnaZucby3ze7+MWG/k6WVdRwePz6PC73d4G9/9QHjuQxri485
      qWvDPxLcC25/iFDAjaU3sRQ/7dMy0bEJfIEo2YiTYk3DIT2/0JdkxrNJ2rpFo6mSSQU4PtGY
      HkuSSmfY2dnD0Nqo+ln5SCKDS7aoVitE4ilKxwUmZ+eJxmN4ZQvdNNE0DQB/OI7fraC26rh9
      YaqlIm1VxdBVDnaOmHv7IUardiZDcZJNxdBNi6ZqEHJLHBXKaIaFpmqM5SdwORQkzgyfyOSR
      LJVKtUY8maZ4uI+qqmiqSqXwDNntxzDOzoOdngCRkA/MNjoezMopVU3DNHVqlSLHJw2ajTrW
      8z6FfC6NZpjUGi0ymQi7W/uouoGqaqiqiqlrPK+aYDSJ1ynRrNfwh2KUi8e02gZBt8STx1ss
      PHyI1jgFwBOIEPS5MLQGkitA87RMpdkmmwmxv18jn00hdwYFZIV8Jo5m2DTbKomIh6XlLULx
      JKXjIzY2tgmHQ3S6QWKpHA7JoFKpEk2kOTnYRTUkHGqLxZV1LFmi3jibk9Th8hKLBMDSMCUX
      pyfHt8sAtmWh6xq2EiAd9WApDiStiSl7MNUmarvJ9t7BeU+BrhvousZYPke5XCUSC7J3UGQs
      k8AXCJKOBak1zuaxMU0DTdeIpXLIegunx0u9+Ax/Yoxqtc7E1BTt+tlObVkmmq7hDsQIekB2
      ulB1i3w2iW1rHB8X0Tp7km1j6DqabpLPZai1VCxdJz81hdaqsby0xMTMDA4JwMY0dDRdI5XN
      YbRquDxOcAaJuCVO6m1qp0WOi6VOg6DrGrrtIZcKoDsctBttpqfGaTc1wtEIiqWdG+CsPXTy
      Y2NUShXcHoVwIotkqrR0i3w2Tq12tjNZ5tk6BqJJ3LKBw+0lP5ah3lJJJ/0Uj0/QzI6Ms7Ky
      O0w85MR2OJgcG6N8UsHvtdk8KDM9MdbZihiGgabpjI3lqFQbzN6ZRzHaOFwudF3jYG+Har39
      vD3Otksim8NWG7j8UcYyMVo2JCIB4skMzWrleVPb6LqOZjmIRX0oLs/tOgVq1k7RdQtbdmAZ
      KvnJGZwyhKNxvD4/6VSKXDaNy+nEtgyOTuooGPg8LmRPhFwyhNfnx+1yEYuGqLZtcqkYkgTl
      4hG2LeP2+mi3VGZmp7FlJ/FwgFA0SrlQZGJ6BociUy2fYJqgON3oqsrk9AyJSJBKy2ZuYR69
      cUo2P4FDkTH1NqVqC9sy8boUvOEUU5N5qsVj8pPTYOpUqw1C0QiyBMWjA5AUvP4ALdVgdnYW
      v8vGGYozMZYjncmSiIZRFJlWo4qmmZgoYOpkx6fIpRMUTmrMzs3gc4IvnMDvdQEWR4UyChY+
      nxfb6WdmagKzVSWRzZNJRKi2YCKXRJKgUipgWhJOtxe1rTI9PY2ptfFGUoyN5WhXy+QnJlFk
      iUaljG7YoDgxNZXxqRlkSwdPhEw8SLvZQDVsQkE/lqlTKDeQMfC5nTj9MTKxAJVqg5nZWdKZ
      DLncGAG/FwkoFY6wkXH7/LRaKrOz06jNOvHMGJlMhmalRHb8rK3VVp22qmPYZ8fT8clJJHuY
      btHvgmq12lM3qEDwSdyqUyCBoFeEAQQjjTCA4FZj2xaVahXL0Kg3r07Me+sHwgSCv/7fPyKd
      jhKfepuN5cfkpu9S3FsnmpsWF8GC20+rtMF//ssn/L2HIX660SQR8hFTmmyUFXEKJLj9eGNJ
      ZrIp4pkJfIrE/FSOelMnGg6KI4BgtBFHAMFI8/8BPzq4N/FUtI4AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Donut chart for cement co2 emission' width='192'>
      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
      RK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Overall contribution of india in co2 emission' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Top 10 CO2 per captia emitting countries' width='192'>
      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
      SUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='emission rate by internal factors' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
